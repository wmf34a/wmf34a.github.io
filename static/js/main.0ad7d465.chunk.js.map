{"version":3,"sources":["data.js","Detail.js","App.js","reportWebVitals.js","index.js"],"names":["shoesData","id","title","content","price","Box_css","styled","div","H4","h4","props","color","Info","store","Detail","useState","alertShow","alertChange","inputData","dataChange","useEffect","timer","setTimeout","clearTimeout","useParams","history","useHistory","find_shoes","shoes","find","x","className","onChange","e","target","value","src","width","onClick","storeChange","push","Card","data","i","alt","App","Data","shoesChange","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","Nav","Link","as","to","NavDropdown","Item","Divider","exact","path","Jumbotron","Button","variant","map","index","axios","get","then","result","catch","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ad7d465.chunk.js","sourcesContent":["var shoesData = [\n\t{\n\t\tid : 0,\n\t\ttitle : \"White and Black\",\n\t\tcontent : \"Born in France\",\n\t\tprice : 120000\n\t},\n\n\t{\n\t\tid : 1,\n\t\ttitle : \"Red Knit\",\n\t\tcontent : \"Born in Seoul\",\n\t\tprice : 110000\n\t},\n\n\t{\n\t\tid : 2,\n\t\ttitle : \"Grey Yordan\",\n\t\tcontent : \"Born in the States\",\n\t\tprice : 130000\n\t}\n];\n\nexport default shoesData;","import React, {useEffect, useState} from 'react'\nimport { useHistory, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './Detail.scss';\n\n// css를 미리 입혀놓은 컴포넌트\nlet Box_css = styled.div`\n  padding: 20px;\n`;\nlet H4 = styled.h4`\n  font-size: 25px;\n  color : ${ props => props.color }\n`;\n\nfunction Detail(props){\n\n  let [alertShow, alertChange] = useState(true);\n  let [inputData, dataChange] = useState('');\n  //component mount, update 될때 특정코드 실행\n  useEffect(()=>{\n    //2초 후에 alert 제거\n    let timer = setTimeout(()=>{ alertChange(false) }, 2000);\n    return ()=>{ clearTimeout(timer) }\n  },[alertShow]); //==> , [] 에는 실행조건이 입력됨. , alert라는 state가 변경될때만 실행, []안에 값이 없을경우 등장시 한번만 실행\n\n  useEffect(()=>{\n    //컴포넌트가 사라질때 코드를 실행시킬 수도 있음.\n    //Unmount 될때 실행됨\n    //return ()=>{ alertChange(true)}\n  })\n  let { id } = useParams();\n  // 방문기록 등을 저장해놓은 object\n  let history = useHistory();\n\n  let find_shoes = props.shoes.find( x => x.id == id )\n\n  return(\n      <div className=\"container\">\n        <Box_css>\n          <H4 className='red'> Detail Page </H4>\n        </Box_css>\n\n        <input onChange={ (e)=>{ dataChange(e.target.value) } } />\n\n        <hr>\n        </hr>\n        { inputData }\n\n        {\n          alertShow === true\n          ? (\n            <div className=\"my_alert2\">\n              <p>재고가 얼마 남지 않았습니다.</p>\n            </div>\n          )\n          : null\n        }\n\n\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <img src=\"https://codingapple1.github.io/shop/shoes1.jpg\" width=\"100%\" />\n          </div>\n          <div className=\"col-md-6 mt-4\">\n            <h4 className=\"pt-5\">{find_shoes.title}</h4>\n            <p>{find_shoes.content}</p>\n            <p>{find_shoes.price}원</p>\n\n            <Info store={props.store}></Info>\n\n            <button className=\"btn btn-danger\" onClick={ ()=>{\n\t\t\t\tprops.storeChange([9,10,11])\n\t\t\t} }>주문하기</button> \n            &nbsp;\n            <button className=\"btn btn-danger\" onClick={ ()=>{\n              //history.goBack();\n              // 특정 경로로 이동 할 경우\n              history.push('/');\n            } }>back</button> \n          </div>\n        </div>\n      </div> \n  )\n}\n\n//재고 컴포넌트\nfunction Info(props){\n  return(\n    <p> 재고 : {props.store[0]}</p>\n\n  )\n}\n\nexport default Detail;","import React, {useEffect, useState} from 'react'\nimport { Navbar, Container, Nav, NavDropdown, Button, Jumbotron} from 'react-bootstrap';\nimport './App.css';\nimport Data from './data.js';\n// route 추가\nimport { Link, Route, Switch } from 'react-router-dom';\n// detail.js import\nimport Detail from './Detail.js';\n// axios library import\nimport axios from 'axios';\n\nfunction App() {\n  let [shoes, shoesChange] = useState(Data);\n  // 재고\n  let [store, storeChange] = useState([10,11,12]);\n\n  let appendShoes = (data)=>{\n      let new_arr = [...shoes];\n      new_arr.push(...data);\n      //data.map((value, index)=>{\n      //  new_arr.push(value);\n      //});\n      shoesChange(new_arr);\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand href=\"#home\">ShoeShop</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link as={Link} to=\"/\"> Home </Nav.Link>\n              <Nav.Link as={Link} to=\"/detail\"> Detail </Nav.Link>\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Jumbotron className=\"background\">\n            <h1>20% Season Off</h1>\n            <p>\n              This is a simple hero unit, a simple jumbotron-style component for calling\n              extra attention to featured content or information.\n            </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n\n          <div className=\"container\" >\n            <div className=\"row\">\n              {\n                // component로 변경\n                // 받아온 데이터 반복문\n                shoes.map((value, index)=>{\n                  //return (\n                  //  <div className=\"col-md-4\">\n                  //    <img src={imges[index].src} width=\"100%\"/>\n                  //    <h4>{shoes[index].title}</h4>\n                  //    <p>{shoes[index].content} & {shoes[index].price}</p>\n                  //  </div>\n                  //)\n                      //<Card title={ shoes[index].title } content={ shoes[index].content } price={ shoes[index].price } img={imges[index].src}></Card>\n                  return <Card shoes={shoes[index]} i={index + 1} key={index}></Card>\n                })\n              }\n            </div>\n            <button className=\"btn btn-primary\" onClick={()=>{\n\t\t\t\t// loading UI\n\t\t\t\taxios.get('https://codingapple1.github.io/shop/data2.json')\n\t\t\t\t.then( (result)=>{ \n\t\t\t\t\t//appendShoes(result.data);\n\t\t\t\t\t// loading UI 안보이게\n\t\t\t\t\tshoesChange( [...shoes, ...result.data] );\n\t\t\t\t} ) // 요청 성공처리\n\t\t\t\t.catch( ()=>{ \n\t\t\t\t\t// loading UI 안보이게\n\t\t\t\t\tconsole.log('fail')\n\t\t\t\t} ) // 예외처리\n            }}>더보기</button>\n          </div>\n        </Route>\n\n        <Route path=\"/detail/:id\">\n          <Detail shoes={shoes} store={store} storeChange={storeChange}/>\n        </Route>\n\n      </Switch>\n\n\n      {/* <Route path=\"/test\" component={Modal}></Route> */}\n\n      {/* <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <img src=\"https://codingapple1.github.io/shop/shoes1.jpg\" width=\"100%\"/>\n            <h4>상품명 : {shoes[0].title}</h4>\n            <p>상품설명 : {shoes[0].content}</p>\n            <p>가격 : {shoes[0].price}</p>\n          </div>\n          <div className=\"col-md-4\">\n            <img src=\"https://codingapple1.github.io/shop/shoes2.jpg\" width=\"100%\"/>\n            <h4>상품명</h4>\n            <p>상품설명 & 가격</p>\n          </div>\n          <div className=\"col-md-4\">\n            <img src=\"https://codingapple1.github.io/shop/shoes3.jpg\" width=\"100%\"/>\n            <h4>상풍명</h4>\n            <p>상품설명 & 가격</p>\n          </div>\n        </div>\n      </div> */}\n\n\n    </div>\n  );\n}\n\nfunction Card(data){\n  return (\n    <div className=\"col-md-4\">\n      <img src={\"https://codingapple1.github.io/shop/shoes\" + data.i +\".jpg\"} width=\"100%\" alt=\"shoes\"/>\n      <h4>상품명 : {data.shoes.title}</h4>\n      <p>상품설명 : {data.shoes.content}</p>\n      <p>가격 : {data.shoes.price}</p>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}